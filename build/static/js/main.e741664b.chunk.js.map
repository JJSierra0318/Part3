{"version":3,"sources":["services/persons.js","components/Filter.js","components/Form.js","components/Person.js","components/AddedNotification.js","components/ErrorNotification.js","App.js","index.js"],"names":["baseURL","axios","get","then","response","data","newPerson","post","id","delete","put","Filter","props","value","filter","onChange","handleFilterChange","Form","onSubmit","handleSubmit","className","newName","handleNameChange","newNumber","handleNumberChange","type","Person","name","number","handleClickDelete","onClick","AddedNotification","message","ErrorNotification","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","addedMessage","setAddedMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","event","target","preventDefault","exists","forEach","element","toLowerCase","console","log","window","confirm","returnedPerson","map","person","length","alert","concat","setTimeout","catch","error","includes","personFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e741664b.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseURL = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseURL, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseURL}/${id}`)\r\n    return request.then(response=> response.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n    const request = axios.put(`${baseURL}/${id}`, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getAll, create, remove, update }","import React from \"react\";\r\n\r\nconst Filter = (props) => <div>filter shown with <input value={props.filter} onChange={props.handleFilterChange}/></div>;\r\n\r\nexport default Filter","import React from \"react\"\r\n\r\nconst Form =(props) => {\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n          <div>name: <input className='Input' value={props.newName} onChange={props.handleNameChange}/></div>\r\n          <div>number: <input className='Input' value={props.newNumber} onChange={props.handleNumberChange}/></div>\r\n          <div>\r\n            <button type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n    )\r\n  }\r\n  \r\nexport default Form","import React from \"react\"\r\n\r\nconst Person = ({id, name, number, handleClickDelete}) => {\r\n\r\n    return (<tr>\r\n      <td>{name}</td>\r\n      <td>{number}</td>\r\n      <td><button onClick={handleClickDelete}>delete</button></td>\r\n    </tr>\r\n  )}\r\n\r\n  export default Person","import React from \"react\";\r\n\r\nconst AddedNotification = ({message}) => {\r\n    if (message === null) return null\r\n\r\n    return (\r\n        <div className='Added'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddedNotification","import React from \"react\";\r\n\r\nconst ErrorNotification = ({message}) => {\r\n    if (message === null) return null\r\n\r\n    return (\r\n        <div className='Error'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorNotification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport Person from './components/Person'\nimport AddedNotification from './components/AddedNotification'\nimport ErrorNotification from './components/ErrorNotification'\n\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] =useState('')\n  const [ filter, setFilter] = useState('')\n  const [ addedMessage, setAddedMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    let exists = false;\n    let id = '';\n\n    persons.forEach((element) => {\n      const person = element.name.toLowerCase();\n      if (person === newName.toLowerCase()) {\n        exists = true;\n        console.log(element.id)\n        id = element.id;\n      }\n    });\n    \n    if (exists) {\n      if (window.confirm(`${newName} is already added to the phonebook, replace de old number with a new one`)){\n        const newPerson = {\n          name: newName,\n          number: newNumber,\n        }\n\n        personService\n          .update(id, newPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id===id ? returnedPerson : person))\n          })\n      }}\n\n    else if (newName.length===0 || newNumber.length===0) {\n      alert('Do not leave any field empty')} \n    else {\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n      };\n  \n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setAddedMessage(`Added ${newName}`)\n          setTimeout(() => {\n            setAddedMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(error.response.data.error)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n\n      \n    }\n    setNewName('');\n    setNewNumber('');\n  }\n\n  const handleClickDelete = (id, name) => {\n\n    if (window.confirm(`Delete ${name}`)){\n      const personFilter = persons.filter((person) => person.id !== id)\n      personService\n        .remove(id)\n        .then(() => {\n          setPersons(personFilter)\n        })\n        .catch(error => {\n          setErrorMessage(`${name} was already removed from the server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n            setPersons(personFilter)\n          }, 5000)\n        })\n    }}\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <AddedNotification message={addedMessage}/>\n      <ErrorNotification message={errorMessage}/>\n      <Filter handleFilterChange={handleFilterChange} filter={filter}/>\n      <h3>add a new person</h3>\n      <Form newName={newName} newNumber={newNumber} \n      handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} handleSubmit={handleSubmit}/>\n      <h3>Numbers</h3>\n      <table>\n        <tbody>\n        {persons.map((person) => {\n          if (person.name.toLowerCase().includes(filter.toLowerCase())) {\n            return <Person key={person.id} id={person.id} name={person.name} number={person.number} handleClickDelete={() => {handleClickDelete(person.id, person.name)}}/>\n          }\n          return undefined\n        })}\n      </tbody>\n    </table>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}